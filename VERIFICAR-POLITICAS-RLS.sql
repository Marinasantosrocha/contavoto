-- ==========================================
-- VERIFICAR E AJUSTAR POL√çTICAS RLS
-- ==========================================

-- ==========================================
-- 1. VERIFICAR SE RLS EST√Å ATIVO
-- ==========================================
SELECT 
  schemaname,
  tablename,
  rowsecurity as rls_ativo
FROM pg_tables
WHERE schemaname = 'public'
  AND tablename IN ('usuarios', 'tipos_usuarios', 'formularios', 'pesquisas', 'politicas')
ORDER BY tablename;

-- ==========================================
-- 2. VERIFICAR POL√çTICAS EXISTENTES
-- ==========================================
SELECT 
  schemaname,
  tablename,
  policyname,
  permissive,
  roles,
  cmd,
  qual
FROM pg_policies
WHERE schemaname = 'public'
ORDER BY tablename, policyname;

-- ==========================================
-- 3. CRIAR POL√çTICAS DE LEITURA P√öBLICA
-- ==========================================
-- IMPORTANTE: Estas pol√≠ticas permitem leitura an√¥nima
-- Use com cautela em produ√ß√£o!

-- Pol√≠tica para TIPOS_USUARIOS (leitura p√∫blica)
DROP POLICY IF EXISTS "Permitir leitura p√∫blica de tipos_usuarios" ON tipos_usuarios;
CREATE POLICY "Permitir leitura p√∫blica de tipos_usuarios"
ON tipos_usuarios FOR SELECT
TO anon, authenticated
USING (true);

-- Pol√≠tica para USUARIOS (leitura p√∫blica para fins de autentica√ß√£o)
DROP POLICY IF EXISTS "Permitir leitura p√∫blica de usuarios" ON usuarios;
CREATE POLICY "Permitir leitura p√∫blica de usuarios"
ON usuarios FOR SELECT
TO anon, authenticated
USING (true);

-- Pol√≠tica para FORMULARIOS (leitura p√∫blica)
DROP POLICY IF EXISTS "Permitir leitura p√∫blica de formularios" ON formularios;
CREATE POLICY "Permitir leitura p√∫blica de formularios"
ON formularios FOR SELECT
TO anon, authenticated
USING (true);

-- Pol√≠tica para PESQUISAS (leitura restrita)
DROP POLICY IF EXISTS "Permitir leitura de pesquisas do usu√°rio" ON pesquisas;
CREATE POLICY "Permitir leitura de pesquisas do usu√°rio"
ON pesquisas FOR SELECT
TO anon, authenticated
USING (true);

-- ==========================================
-- 4. VERIFICAR SE AS POL√çTICAS FORAM CRIADAS
-- ==========================================
SELECT 
  schemaname,
  tablename,
  policyname,
  cmd as operacao,
  roles as funcoes
FROM pg_policies
WHERE schemaname = 'public'
  AND tablename IN ('usuarios', 'tipos_usuarios', 'formularios', 'pesquisas')
ORDER BY tablename, policyname;

-- ==========================================
-- 5. TESTAR ACESSO COM SELECT
-- ==========================================
-- Teste 1: Tipos de usu√°rios
SELECT COUNT(*) as total_tipos FROM tipos_usuarios;

-- Teste 2: Usu√°rios
SELECT COUNT(*) as total_usuarios FROM usuarios;

-- Teste 3: Formul√°rios
SELECT COUNT(*) as total_formularios FROM formularios;

-- Teste 4: Pesquisas
SELECT COUNT(*) as total_pesquisas FROM pesquisas;

-- ==========================================
-- OBSERVA√á√ïES IMPORTANTES:
-- ==========================================
/*
‚ö†Ô∏è SEGURAN√áA:
- Essas pol√≠ticas permitem LEITURA P√öBLICA de dados
- Para produ√ß√£o, considere pol√≠ticas mais restritivas
- Nunca permita escrita p√∫blica sem valida√ß√£o

‚úÖ RECOMENDA√á√ïES:
1. Use pol√≠ticas espec√≠ficas por usu√°rio em produ√ß√£o
2. Implemente verifica√ß√£o de auth_id
3. Limite o acesso aos campos sens√≠veis (senha)
4. Use RLS junto com verifica√ß√µes no frontend

üìö DOCUMENTA√á√ÉO:
https://supabase.com/docs/guides/auth/row-level-security
*/

